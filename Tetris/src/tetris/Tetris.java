package tetris;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;

public class Tetris extends javax.swing.JPanel {

    public static int score = 0;
    public static Tetromino currentTet; // The falling Tetronimo
    public static int level = 0;
    public static double gravity = 0; // Speed at which currentTet false
    public static boolean animation = false; // Game or Animateion State

    public int animationFrame = 0;

    public Timer clock = new Timer(50, new ActionListener() {  // 50ms delay between ticks
        @Override
        public void actionPerformed(ActionEvent ae) {
            tick();               // Write a method named tick to advance your game
            jPanel1.repaint();
        }
    });
    
    public void tick() {
        // Move the Tetronimo with the gravity unless animating
        // Graphics Template thing . animation with animation Frame
    }

    public static void deleteLines() {
        // This gets called whenever a Tetromino gets locked it

        // If there is not null things in stack[0] or stack[1] call gameover
        // Check if there are full lines
        // updateScore with the number of full lines
        // change animation state
        // 
        // Call nextTetromino with a boolean of weather lines where cleared or not
    }

    public static void nextTetromino(boolean cleared) {
        // replace current_Tet with a new Tetromino
        // Increase Level If level % 100 != 99 (unless cleared)
        // Increase Gravity by 2% of Max gravity for this block of levels
    }

    public static void updateScore(int lines) {
        // Updates the score based on the number of lines cleared
    }

    public static void gameOver(boolean win) {
        // This is the Game Over Sequence
        // The Boolean win is used to discribe if the game has been won or lost
    }

    public Tetris() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new Tetris();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 457, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 725, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
